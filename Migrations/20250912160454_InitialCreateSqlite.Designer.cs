// <auto-generated />
using System;
using BibliothequeLIPAJOLI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BibliothèqueLIPAJOLI.Migrations
{
    [DbContext(typeof(BibliothequeContext))]
    [Migration("20250912160454_InitialCreateSqlite")]
    partial class InitialCreateSqlite
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.20");

            modelBuilder.Entity("BibliothequeLIPAJOLI.Models.Livre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnneePublication")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Auteur")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("QuantiteDisponible")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuantiteTotale")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Livres");
                });

            modelBuilder.Entity("BibliothequeLIPAJOLI.Models.Pret", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DatePret")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateRetourPrevue")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateRetourReelle")
                        .HasColumnType("TEXT");

                    b.Property<int>("LivreId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsagerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LivreId");

                    b.HasIndex("UsagerId");

                    b.ToTable("Prets");
                });

            modelBuilder.Entity("BibliothequeLIPAJOLI.Models.Usager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Courriel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usagers");
                });

            modelBuilder.Entity("BibliothequeLIPAJOLI.Models.Pret", b =>
                {
                    b.HasOne("BibliothequeLIPAJOLI.Models.Livre", "Livre")
                        .WithMany("Prets")
                        .HasForeignKey("LivreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BibliothequeLIPAJOLI.Models.Usager", "Usager")
                        .WithMany("Prets")
                        .HasForeignKey("UsagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Livre");

                    b.Navigation("Usager");
                });

            modelBuilder.Entity("BibliothequeLIPAJOLI.Models.Livre", b =>
                {
                    b.Navigation("Prets");
                });

            modelBuilder.Entity("BibliothequeLIPAJOLI.Models.Usager", b =>
                {
                    b.Navigation("Prets");
                });
#pragma warning restore 612, 618
        }
    }
}
